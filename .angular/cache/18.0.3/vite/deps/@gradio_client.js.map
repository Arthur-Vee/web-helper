{
  "version": 3,
  "sources": ["../../../../../node_modules/@gradio/client/dist/index.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _currentLine;\nvar fn = new Intl.Collator(0, { numeric: 1 }).compare;\nfunction semiver(a, b, bool) {\n  a = a.split(\".\");\n  b = b.split(\".\");\n  return fn(a[0], b[0]) || fn(a[1], b[1]) || (b[2] = b.slice(2).join(\".\"), bool = /[.-]/.test(a[2] = a.slice(2).join(\".\")), bool == /[.-]/.test(b[2]) ? fn(a[2], b[2]) : bool ? -1 : 1);\n}\nconst HOST_URL = \"host\";\nconst UPLOAD_URL = \"upload\";\nconst LOGIN_URL = \"login\";\nconst CONFIG_URL = \"config\";\nconst API_INFO_URL = \"info\";\nconst RUNTIME_URL = \"runtime\";\nconst SLEEPTIME_URL = \"sleeptime\";\nconst SPACE_FETCHER_URL = \"https://gradio-space-api-fetcher-v2.hf.space/api\";\nconst QUEUE_FULL_MSG = \"This application is currently busy. Please try again. \";\nconst BROKEN_CONNECTION_MSG = \"Connection errored out. \";\nconst CONFIG_ERROR_MSG = \"Could not resolve app config. \";\nconst SPACE_STATUS_ERROR_MSG = \"Could not get space status. \";\nconst API_INFO_ERROR_MSG = \"Could not get API info. \";\nconst SPACE_METADATA_ERROR_MSG = \"Space metadata could not be loaded. \";\nconst INVALID_URL_MSG = \"Invalid URL. A full URL path is required.\";\nconst UNAUTHORIZED_MSG = \"Not authorized to access this space. \";\nconst INVALID_CREDENTIALS_MSG = \"Invalid credentials. Could not login. \";\nconst MISSING_CREDENTIALS_MSG = \"Login credentials are required to access this space.\";\nconst NODEJS_FS_ERROR_MSG = \"File system access is only available in Node.js environments\";\nconst ROOT_URL_ERROR_MSG = \"Root URL not found in client config\";\nconst FILE_PROCESSING_ERROR_MSG = \"Error uploading file\";\nfunction resolve_root(base_url, root_path, prioritize_base) {\n  if (root_path.startsWith(\"http://\") || root_path.startsWith(\"https://\")) {\n    return prioritize_base ? base_url : root_path;\n  }\n  return base_url + root_path;\n}\nasync function get_jwt(space, token, cookies) {\n  try {\n    const r = await fetch(`https://huggingface.co/api/spaces/${space}/jwt`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        ...cookies ? { Cookie: cookies } : {}\n      }\n    });\n    const jwt = (await r.json()).token;\n    return jwt || false;\n  } catch (e) {\n    return false;\n  }\n}\nfunction map_names_to_ids(fns) {\n  let apis = {};\n  fns.forEach(({ api_name, id }) => {\n    if (api_name)\n      apis[api_name] = id;\n  });\n  return apis;\n}\nasync function resolve_config(endpoint) {\n  var _a;\n  const headers = this.options.hf_token ? { Authorization: `Bearer ${this.options.hf_token}` } : {};\n  headers[\"Content-Type\"] = \"application/json\";\n  if (typeof window !== \"undefined\" && window.gradio_config && location.origin !== \"http://localhost:9876\" && !window.gradio_config.dev_mode) {\n    const path = window.gradio_config.root;\n    const config = window.gradio_config;\n    let config_root = resolve_root(endpoint, config.root, false);\n    config.root = config_root;\n    return { ...config, path };\n  } else if (endpoint) {\n    const config_url = join_urls(endpoint, CONFIG_URL);\n    const response = await this.fetch(config_url, {\n      headers,\n      credentials: \"include\"\n    });\n    if ((response == null ? void 0 : response.status) === 401 && !this.options.auth) {\n      throw new Error(MISSING_CREDENTIALS_MSG);\n    } else if ((response == null ? void 0 : response.status) === 401 && this.options.auth) {\n      throw new Error(INVALID_CREDENTIALS_MSG);\n    }\n    if ((response == null ? void 0 : response.status) === 200) {\n      let config = await response.json();\n      config.path = config.path ?? \"\";\n      config.root = endpoint;\n      (_a = config.dependencies) == null ? void 0 : _a.forEach((dep, i) => {\n        if (dep.id === void 0) {\n          dep.id = i;\n        }\n      });\n      return config;\n    } else if ((response == null ? void 0 : response.status) === 401) {\n      throw new Error(UNAUTHORIZED_MSG);\n    }\n    throw new Error(CONFIG_ERROR_MSG);\n  }\n  throw new Error(CONFIG_ERROR_MSG);\n}\nasync function resolve_cookies() {\n  const { http_protocol, host } = await process_endpoint(\n    this.app_reference,\n    this.options.hf_token\n  );\n  try {\n    if (this.options.auth) {\n      const cookie_header = await get_cookie_header(\n        http_protocol,\n        host,\n        this.options.auth,\n        this.fetch,\n        this.options.hf_token\n      );\n      if (cookie_header)\n        this.set_cookies(cookie_header);\n    }\n  } catch (e) {\n    throw Error(e.message);\n  }\n}\nasync function get_cookie_header(http_protocol, host, auth, _fetch, hf_token) {\n  const formData = new FormData();\n  formData.append(\"username\", auth == null ? void 0 : auth[0]);\n  formData.append(\"password\", auth == null ? void 0 : auth[1]);\n  let headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  const res = await _fetch(`${http_protocol}//${host}/${LOGIN_URL}`, {\n    headers,\n    method: \"POST\",\n    body: formData,\n    credentials: \"include\"\n  });\n  if (res.status === 200) {\n    return res.headers.get(\"set-cookie\");\n  } else if (res.status === 401) {\n    throw new Error(INVALID_CREDENTIALS_MSG);\n  } else {\n    throw new Error(SPACE_METADATA_ERROR_MSG);\n  }\n}\nfunction determine_protocol(endpoint) {\n  if (endpoint.startsWith(\"http\")) {\n    const { protocol, host, pathname } = new URL(endpoint);\n    if (host.endsWith(\"hf.space\")) {\n      return {\n        ws_protocol: \"wss\",\n        host,\n        http_protocol: protocol\n      };\n    }\n    return {\n      ws_protocol: protocol === \"https:\" ? \"wss\" : \"ws\",\n      http_protocol: protocol,\n      host: host + (pathname !== \"/\" ? pathname : \"\")\n    };\n  } else if (endpoint.startsWith(\"file:\")) {\n    return {\n      ws_protocol: \"ws\",\n      http_protocol: \"http:\",\n      host: \"lite.local\"\n      // Special fake hostname only used for this case. This matches the hostname allowed in `is_self_host()` in `js/wasm/network/host.ts`.\n    };\n  }\n  return {\n    ws_protocol: \"wss\",\n    http_protocol: \"https:\",\n    host: endpoint\n  };\n}\nconst parse_and_set_cookies = (cookie_header) => {\n  let cookies = [];\n  const parts = cookie_header.split(/,(?=\\s*[^\\s=;]+=[^\\s=;]+)/);\n  parts.forEach((cookie) => {\n    const [cookie_name, cookie_value] = cookie.split(\";\")[0].split(\"=\");\n    if (cookie_name && cookie_value) {\n      cookies.push(`${cookie_name.trim()}=${cookie_value.trim()}`);\n    }\n  });\n  return cookies;\n};\nconst RE_SPACE_NAME = /^[a-zA-Z0-9_\\-\\.]+\\/[a-zA-Z0-9_\\-\\.]+$/;\nconst RE_SPACE_DOMAIN = /.*hf\\.space\\/{0,1}$/;\nasync function process_endpoint(app_reference, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  const _app_reference = app_reference.trim().replace(/\\/$/, \"\");\n  if (RE_SPACE_NAME.test(_app_reference)) {\n    try {\n      const res = await fetch(\n        `https://huggingface.co/api/spaces/${_app_reference}/${HOST_URL}`,\n        { headers }\n      );\n      const _host = (await res.json()).host;\n      return {\n        space_id: app_reference,\n        ...determine_protocol(_host)\n      };\n    } catch (e) {\n      throw new Error(SPACE_METADATA_ERROR_MSG);\n    }\n  }\n  if (RE_SPACE_DOMAIN.test(_app_reference)) {\n    const { ws_protocol, http_protocol, host } = determine_protocol(_app_reference);\n    return {\n      space_id: host.replace(\".hf.space\", \"\"),\n      ws_protocol,\n      http_protocol,\n      host\n    };\n  }\n  return {\n    space_id: false,\n    ...determine_protocol(_app_reference)\n  };\n}\nconst join_urls = (...urls) => {\n  try {\n    return urls.reduce((base_url, part) => {\n      base_url = base_url.replace(/\\/+$/, \"\");\n      part = part.replace(/^\\/+/, \"\");\n      return new URL(part, base_url + \"/\").toString();\n    });\n  } catch (e) {\n    throw new Error(INVALID_URL_MSG);\n  }\n};\nfunction transform_api_info(api_info, config, api_map) {\n  const transformed_info = {\n    named_endpoints: {},\n    unnamed_endpoints: {}\n  };\n  Object.keys(api_info).forEach((category) => {\n    if (category === \"named_endpoints\" || category === \"unnamed_endpoints\") {\n      transformed_info[category] = {};\n      Object.entries(api_info[category]).forEach(\n        ([endpoint, { parameters, returns }]) => {\n          var _a, _b, _c, _d;\n          const dependencyIndex = ((_a = config.dependencies.find(\n            (dep) => dep.api_name === endpoint || dep.api_name === endpoint.replace(\"/\", \"\")\n          )) == null ? void 0 : _a.id) || api_map[endpoint.replace(\"/\", \"\")] || -1;\n          const dependencyTypes = dependencyIndex !== -1 ? (_b = config.dependencies.find((dep) => dep.id == dependencyIndex)) == null ? void 0 : _b.types : { continuous: false, generator: false, cancel: false };\n          if (dependencyIndex !== -1 && ((_d = (_c = config.dependencies.find((dep) => dep.id == dependencyIndex)) == null ? void 0 : _c.inputs) == null ? void 0 : _d.length) !== parameters.length) {\n            const components = config.dependencies.find((dep) => dep.id == dependencyIndex).inputs.map(\n              (input) => {\n                var _a2;\n                return (_a2 = config.components.find((c) => c.id === input)) == null ? void 0 : _a2.type;\n              }\n            );\n            try {\n              components.forEach((comp, idx) => {\n                if (comp === \"state\") {\n                  const new_param = {\n                    component: \"state\",\n                    example: null,\n                    parameter_default: null,\n                    parameter_has_default: true,\n                    parameter_name: null,\n                    hidden: true\n                  };\n                  parameters.splice(idx, 0, new_param);\n                }\n              });\n            } catch (e) {\n              console.error(e);\n            }\n          }\n          const transform_type = (data, component, serializer, signature_type) => ({\n            ...data,\n            description: get_description(data == null ? void 0 : data.type, serializer),\n            type: get_type(data == null ? void 0 : data.type, component, serializer, signature_type) || \"\"\n          });\n          transformed_info[category][endpoint] = {\n            parameters: parameters.map(\n              (p) => transform_type(p, p == null ? void 0 : p.component, p == null ? void 0 : p.serializer, \"parameter\")\n            ),\n            returns: returns.map(\n              (r) => transform_type(r, r == null ? void 0 : r.component, r == null ? void 0 : r.serializer, \"return\")\n            ),\n            type: dependencyTypes\n          };\n        }\n      );\n    }\n  });\n  return transformed_info;\n}\nfunction get_type(type, component, serializer, signature_type) {\n  switch (type == null ? void 0 : type.type) {\n    case \"string\":\n      return \"string\";\n    case \"boolean\":\n      return \"boolean\";\n    case \"number\":\n      return \"number\";\n  }\n  if (serializer === \"JSONSerializable\" || serializer === \"StringSerializable\") {\n    return \"any\";\n  } else if (serializer === \"ListStringSerializable\") {\n    return \"string[]\";\n  } else if (component === \"Image\") {\n    return signature_type === \"parameter\" ? \"Blob | File | Buffer\" : \"string\";\n  } else if (serializer === \"FileSerializable\") {\n    if ((type == null ? void 0 : type.type) === \"array\") {\n      return signature_type === \"parameter\" ? \"(Blob | File | Buffer)[]\" : `{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}[]`;\n    }\n    return signature_type === \"parameter\" ? \"Blob | File | Buffer\" : `{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}`;\n  } else if (serializer === \"GallerySerializable\") {\n    return signature_type === \"parameter\" ? \"[(Blob | File | Buffer), (string | null)][]\" : `[{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}, (string | null))][]`;\n  }\n}\nfunction get_description(type, serializer) {\n  if (serializer === \"GallerySerializable\") {\n    return \"array of [file, label] tuples\";\n  } else if (serializer === \"ListStringSerializable\") {\n    return \"array of strings\";\n  } else if (serializer === \"FileSerializable\") {\n    return \"array of files or single file\";\n  }\n  return type == null ? void 0 : type.description;\n}\nfunction handle_message(data, last_status) {\n  const queue = true;\n  switch (data.msg) {\n    case \"send_data\":\n      return { type: \"data\" };\n    case \"send_hash\":\n      return { type: \"hash\" };\n    case \"queue_full\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          message: QUEUE_FULL_MSG,\n          stage: \"error\",\n          code: data.code,\n          success: data.success\n        }\n      };\n    case \"heartbeat\":\n      return {\n        type: \"heartbeat\"\n      };\n    case \"unexpected_error\":\n      return {\n        type: \"unexpected_error\",\n        status: {\n          queue,\n          message: data.message,\n          stage: \"error\",\n          success: false\n        }\n      };\n    case \"estimation\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: last_status || \"pending\",\n          code: data.code,\n          size: data.queue_size,\n          position: data.rank,\n          eta: data.rank_eta,\n          success: data.success\n        }\n      };\n    case \"progress\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: \"pending\",\n          code: data.code,\n          progress_data: data.progress_data,\n          success: data.success\n        }\n      };\n    case \"log\":\n      return { type: \"log\", data };\n    case \"process_generating\":\n      return {\n        type: \"generating\",\n        status: {\n          queue,\n          message: !data.success ? data.output.error : null,\n          stage: data.success ? \"generating\" : \"error\",\n          code: data.code,\n          progress_data: data.progress_data,\n          eta: data.average_duration\n        },\n        data: data.success ? data.output : null\n      };\n    case \"process_completed\":\n      if (\"error\" in data.output) {\n        return {\n          type: \"update\",\n          status: {\n            queue,\n            message: data.output.error,\n            stage: \"error\",\n            code: data.code,\n            success: data.success\n          }\n        };\n      }\n      return {\n        type: \"complete\",\n        status: {\n          queue,\n          message: !data.success ? data.output.error : void 0,\n          stage: data.success ? \"complete\" : \"error\",\n          code: data.code,\n          progress_data: data.progress_data,\n          changed_state_ids: data.success ? data.output.changed_state_ids : void 0\n        },\n        data: data.success ? data.output : null\n      };\n    case \"process_starts\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: \"pending\",\n          code: data.code,\n          size: data.rank,\n          position: 0,\n          success: data.success,\n          eta: data.eta\n        }\n      };\n  }\n  return { type: \"none\", status: { stage: \"error\", queue } };\n}\nconst map_data_to_params = (data, api_info) => {\n  const parameters = Object.values(api_info.named_endpoints).flatMap(\n    (values) => values.parameters\n  );\n  if (Array.isArray(data)) {\n    if (data.length > parameters.length) {\n      console.warn(\"Too many arguments provided for the endpoint.\");\n    }\n    return data;\n  }\n  const resolved_data = [];\n  const provided_keys = Object.keys(data);\n  parameters.forEach((param, index) => {\n    if (data.hasOwnProperty(param.parameter_name)) {\n      resolved_data[index] = data[param.parameter_name];\n    } else if (param.parameter_has_default) {\n      resolved_data[index] = param.parameter_default;\n    } else {\n      throw new Error(\n        `No value provided for required parameter: ${param.parameter_name}`\n      );\n    }\n  });\n  provided_keys.forEach((key) => {\n    if (!parameters.some((param) => param.parameter_name === key)) {\n      throw new Error(\n        `Parameter \\`${key}\\` is not a valid keyword argument. Please refer to the API for usage.`\n      );\n    }\n  });\n  resolved_data.forEach((value, idx) => {\n    if (value === void 0 && !parameters[idx].parameter_has_default) {\n      throw new Error(\n        `No value provided for required parameter: ${parameters[idx].parameter_name}`\n      );\n    }\n  });\n  return resolved_data;\n};\nasync function view_api() {\n  if (this.api_info)\n    return this.api_info;\n  const { hf_token } = this.options;\n  const { config } = this;\n  const headers = { \"Content-Type\": \"application/json\" };\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  if (!config) {\n    return;\n  }\n  try {\n    let response;\n    if (semiver((config == null ? void 0 : config.version) || \"2.0.0\", \"3.30\") < 0) {\n      response = await this.fetch(SPACE_FETCHER_URL, {\n        method: \"POST\",\n        body: JSON.stringify({\n          serialize: false,\n          config: JSON.stringify(config)\n        }),\n        headers,\n        credentials: \"include\"\n      });\n    } else {\n      const url = join_urls(config.root, API_INFO_URL);\n      response = await this.fetch(url, {\n        headers,\n        credentials: \"include\"\n      });\n    }\n    if (!response.ok) {\n      throw new Error(BROKEN_CONNECTION_MSG);\n    }\n    let api_info = await response.json();\n    if (\"api\" in api_info) {\n      api_info = api_info.api;\n    }\n    if (api_info.named_endpoints[\"/predict\"] && !api_info.unnamed_endpoints[\"0\"]) {\n      api_info.unnamed_endpoints[0] = api_info.named_endpoints[\"/predict\"];\n    }\n    return transform_api_info(api_info, config, this.api_map);\n  } catch (e) {\n    \"Could not get API info. \" + e.message;\n  }\n}\nasync function upload_files(root_url, files, upload_id) {\n  var _a;\n  const headers = {};\n  if ((_a = this == null ? void 0 : this.options) == null ? void 0 : _a.hf_token) {\n    headers.Authorization = `Bearer ${this.options.hf_token}`;\n  }\n  const chunkSize = 1e3;\n  const uploadResponses = [];\n  let response;\n  for (let i = 0; i < files.length; i += chunkSize) {\n    const chunk = files.slice(i, i + chunkSize);\n    const formData = new FormData();\n    chunk.forEach((file) => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const upload_url = upload_id ? `${root_url}/${UPLOAD_URL}?upload_id=${upload_id}` : `${root_url}/${UPLOAD_URL}`;\n      response = await this.fetch(upload_url, {\n        method: \"POST\",\n        body: formData,\n        headers,\n        credentials: \"include\"\n      });\n    } catch (e) {\n      throw new Error(BROKEN_CONNECTION_MSG + e.message);\n    }\n    if (!response.ok) {\n      const error_text = await response.text();\n      return { error: `HTTP ${response.status}: ${error_text}` };\n    }\n    const output = await response.json();\n    if (output) {\n      uploadResponses.push(...output);\n    }\n  }\n  return { files: uploadResponses };\n}\nasync function upload(file_data, root_url, upload_id, max_file_size) {\n  let files = (Array.isArray(file_data) ? file_data : [file_data]).map(\n    (file_data2) => file_data2.blob\n  );\n  const oversized_files = files.filter(\n    (f) => f.size > (max_file_size ?? Infinity)\n  );\n  if (oversized_files.length) {\n    throw new Error(\n      `File size exceeds the maximum allowed size of ${max_file_size} bytes: ${oversized_files.map((f) => f.name).join(\", \")}`\n    );\n  }\n  return await Promise.all(\n    await this.upload_files(root_url, files, upload_id).then(\n      async (response) => {\n        if (response.error) {\n          throw new Error(response.error);\n        } else {\n          if (response.files) {\n            return response.files.map((f, i) => {\n              const file = new FileData({\n                ...file_data[i],\n                path: f,\n                url: root_url + \"/file=\" + f\n              });\n              return file;\n            });\n          }\n          return [];\n        }\n      }\n    )\n  );\n}\nasync function prepare_files(files, is_stream) {\n  return files.map(\n    (f) => new FileData({\n      path: f.name,\n      orig_name: f.name,\n      blob: f,\n      size: f.size,\n      mime_type: f.type,\n      is_stream\n    })\n  );\n}\nclass FileData {\n  constructor({\n    path,\n    url,\n    orig_name,\n    size,\n    blob,\n    is_stream,\n    mime_type,\n    alt_text\n  }) {\n    __publicField(this, \"path\");\n    __publicField(this, \"url\");\n    __publicField(this, \"orig_name\");\n    __publicField(this, \"size\");\n    __publicField(this, \"blob\");\n    __publicField(this, \"is_stream\");\n    __publicField(this, \"mime_type\");\n    __publicField(this, \"alt_text\");\n    __publicField(this, \"meta\", { _type: \"gradio.FileData\" });\n    this.path = path;\n    this.url = url;\n    this.orig_name = orig_name;\n    this.size = size;\n    this.blob = url ? void 0 : blob;\n    this.is_stream = is_stream;\n    this.mime_type = mime_type;\n    this.alt_text = alt_text;\n  }\n}\nclass Command {\n  constructor(command, meta) {\n    __publicField(this, \"type\");\n    __publicField(this, \"command\");\n    __publicField(this, \"meta\");\n    __publicField(this, \"fileData\");\n    this.type = \"command\";\n    this.command = command;\n    this.meta = meta;\n  }\n}\nconst is_node = typeof process !== \"undefined\" && process.versions && process.versions.node;\nfunction update_object(object, newValue, stack) {\n  while (stack.length > 1) {\n    const key2 = stack.shift();\n    if (typeof key2 === \"string\" || typeof key2 === \"number\") {\n      object = object[key2];\n    } else {\n      throw new Error(\"Invalid key type\");\n    }\n  }\n  const key = stack.shift();\n  if (typeof key === \"string\" || typeof key === \"number\") {\n    object[key] = newValue;\n  } else {\n    throw new Error(\"Invalid key type\");\n  }\n}\nasync function walk_and_store_blobs(data, type = void 0, path = [], root = false, endpoint_info = void 0) {\n  if (Array.isArray(data)) {\n    let blob_refs = [];\n    await Promise.all(\n      data.map(async (_, index) => {\n        var _a;\n        let new_path = path.slice();\n        new_path.push(String(index));\n        const array_refs = await walk_and_store_blobs(\n          data[index],\n          root ? ((_a = endpoint_info == null ? void 0 : endpoint_info.parameters[index]) == null ? void 0 : _a.component) || void 0 : type,\n          new_path,\n          false,\n          endpoint_info\n        );\n        blob_refs = blob_refs.concat(array_refs);\n      })\n    );\n    return blob_refs;\n  } else if (globalThis.Buffer && data instanceof globalThis.Buffer || data instanceof Blob) {\n    return [\n      {\n        path,\n        blob: new Blob([data]),\n        type\n      }\n    ];\n  } else if (typeof data === \"object\" && data !== null) {\n    let blob_refs = [];\n    for (const key of Object.keys(data)) {\n      const new_path = [...path, key];\n      const value = data[key];\n      blob_refs = blob_refs.concat(\n        await walk_and_store_blobs(\n          value,\n          void 0,\n          new_path,\n          false,\n          endpoint_info\n        )\n      );\n    }\n    return blob_refs;\n  }\n  return [];\n}\nfunction skip_queue(id, config) {\n  var _a, _b;\n  let fn_queue = (_b = (_a = config == null ? void 0 : config.dependencies) == null ? void 0 : _a.find((dep) => dep.id == id)) == null ? void 0 : _b.queue;\n  if (fn_queue != null) {\n    return !fn_queue;\n  }\n  return !config.enable_queue;\n}\nfunction post_message(message, origin) {\n  return new Promise((res, _rej) => {\n    const channel = new MessageChannel();\n    channel.port1.onmessage = ({ data }) => {\n      channel.port1.close();\n      res(data);\n    };\n    window.parent.postMessage(message, origin, [channel.port2]);\n  });\n}\nfunction handle_file(file_or_url) {\n  if (typeof file_or_url === \"string\") {\n    if (file_or_url.startsWith(\"http://\") || file_or_url.startsWith(\"https://\")) {\n      return {\n        path: file_or_url,\n        url: file_or_url,\n        orig_name: file_or_url.split(\"/\").pop() ?? \"unknown\",\n        meta: { _type: \"gradio.FileData\" }\n      };\n    }\n    if (is_node) {\n      return new Command(\"upload_file\", {\n        path: file_or_url,\n        name: file_or_url,\n        orig_path: file_or_url\n      });\n    }\n  } else if (typeof File !== \"undefined\" && file_or_url instanceof File) {\n    return {\n      path: file_or_url instanceof File ? file_or_url.name : \"blob\",\n      orig_name: file_or_url instanceof File ? file_or_url.name : \"unknown\",\n      // @ts-ignore\n      blob: file_or_url instanceof File ? file_or_url : new Blob([file_or_url]),\n      size: file_or_url instanceof Blob ? file_or_url.size : Buffer.byteLength(file_or_url),\n      mime_type: file_or_url instanceof File ? file_or_url.type : \"application/octet-stream\",\n      // Default MIME type for buffers\n      meta: { _type: \"gradio.FileData\" }\n    };\n  } else if (file_or_url instanceof Buffer) {\n    return new Blob([file_or_url]);\n  } else if (file_or_url instanceof Blob) {\n    return file_or_url;\n  }\n  throw new Error(\n    \"Invalid input: must be a URL, File, Blob, or Buffer object.\"\n  );\n}\nfunction handle_payload(resolved_payload, dependency, components, type, with_null_state = false) {\n  if (type === \"input\" && !with_null_state) {\n    throw new Error(\"Invalid code path. Cannot skip state inputs for input.\");\n  }\n  if (type === \"output\" && with_null_state) {\n    return resolved_payload;\n  }\n  let updated_payload = [];\n  let payload_index = 0;\n  for (let i = 0; i < dependency.inputs.length; i++) {\n    const input_id = dependency.inputs[i];\n    const component = components.find((c) => c.id === input_id);\n    if ((component == null ? void 0 : component.type) === \"state\") {\n      if (with_null_state) {\n        if (resolved_payload.length === dependency.inputs.length) {\n          const value = resolved_payload[payload_index];\n          updated_payload.push(value);\n          payload_index++;\n        } else {\n          updated_payload.push(null);\n        }\n      } else {\n        payload_index++;\n        continue;\n      }\n      continue;\n    } else {\n      const value = resolved_payload[payload_index];\n      updated_payload.push(value);\n      payload_index++;\n    }\n  }\n  return updated_payload;\n}\nasync function handle_blob(endpoint, data, api_info) {\n  const self = this;\n  await process_local_file_commands(self, data);\n  const blobRefs = await walk_and_store_blobs(\n    data,\n    void 0,\n    [],\n    true,\n    api_info\n  );\n  const results = await Promise.all(\n    blobRefs.map(async ({ path, blob, type }) => {\n      if (!blob)\n        return { path, type };\n      const response = await self.upload_files(endpoint, [blob]);\n      const file_url = response.files && response.files[0];\n      return {\n        path,\n        file_url,\n        type,\n        name: blob instanceof File ? blob == null ? void 0 : blob.name : void 0\n      };\n    })\n  );\n  results.forEach(({ path, file_url, type, name }) => {\n    if (type === \"Gallery\") {\n      update_object(data, file_url, path);\n    } else if (file_url) {\n      const file = new FileData({ path: file_url, orig_name: name });\n      update_object(data, file, path);\n    }\n  });\n  return data;\n}\nasync function process_local_file_commands(client2, data) {\n  var _a, _b;\n  const root = ((_a = client2.config) == null ? void 0 : _a.root) || ((_b = client2.config) == null ? void 0 : _b.root_url);\n  if (!root) {\n    throw new Error(ROOT_URL_ERROR_MSG);\n  }\n  await recursively_process_commands(client2, data);\n}\nasync function recursively_process_commands(client2, data, path = []) {\n  for (const key in data) {\n    if (data[key] instanceof Command) {\n      await process_single_command(client2, data, key);\n    } else if (typeof data[key] === \"object\" && data[key] !== null) {\n      await recursively_process_commands(client2, data[key], [...path, key]);\n    }\n  }\n}\nasync function process_single_command(client2, data, key) {\n  var _a, _b;\n  let cmd_item = data[key];\n  const root = ((_a = client2.config) == null ? void 0 : _a.root) || ((_b = client2.config) == null ? void 0 : _b.root_url);\n  if (!root) {\n    throw new Error(ROOT_URL_ERROR_MSG);\n  }\n  try {\n    let fileBuffer;\n    let fullPath;\n    if (typeof process !== \"undefined\" && process.versions && process.versions.node) {\n      const fs = await import(\"fs/promises\");\n      const path = await import(\"path\");\n      fullPath = path.resolve(process.cwd(), cmd_item.meta.path);\n      fileBuffer = await fs.readFile(fullPath);\n    } else {\n      throw new Error(NODEJS_FS_ERROR_MSG);\n    }\n    const file = new Blob([fileBuffer], { type: \"application/octet-stream\" });\n    const response = await client2.upload_files(root, [file]);\n    const file_url = response.files && response.files[0];\n    if (file_url) {\n      const fileData = new FileData({\n        path: file_url,\n        orig_name: cmd_item.meta.name || \"\"\n      });\n      data[key] = fileData;\n    }\n  } catch (error) {\n    console.error(FILE_PROCESSING_ERROR_MSG, error);\n  }\n}\nasync function post_data(url, body, additional_headers) {\n  const headers = { \"Content-Type\": \"application/json\" };\n  if (this.options.hf_token) {\n    headers.Authorization = `Bearer ${this.options.hf_token}`;\n  }\n  try {\n    var response = await this.fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { ...headers, ...additional_headers },\n      credentials: \"include\"\n    });\n  } catch (e) {\n    return [{ error: BROKEN_CONNECTION_MSG }, 500];\n  }\n  let output;\n  let status;\n  try {\n    output = await response.json();\n    status = response.status;\n  } catch (e) {\n    output = { error: `Could not parse server response: ${e}` };\n    status = 500;\n  }\n  return [output, status];\n}\nasync function predict(endpoint, data) {\n  let data_returned = false;\n  let status_complete = false;\n  let dependency;\n  if (!this.config) {\n    throw new Error(\"Could not resolve app config\");\n  }\n  if (typeof endpoint === \"number\") {\n    dependency = this.config.dependencies.find((dep) => dep.id == endpoint);\n  } else {\n    const trimmed_endpoint = endpoint.replace(/^\\//, \"\");\n    dependency = this.config.dependencies.find(\n      (dep) => dep.id == this.api_map[trimmed_endpoint]\n    );\n  }\n  if (dependency == null ? void 0 : dependency.types.continuous) {\n    throw new Error(\n      \"Cannot call predict on this function as it may run forever. Use submit instead\"\n    );\n  }\n  return new Promise(async (resolve, reject) => {\n    const app = this.submit(endpoint, data, null, null, true);\n    let result;\n    for await (const message of app) {\n      if (message.type === \"data\") {\n        if (status_complete) {\n          resolve(result);\n        }\n        data_returned = true;\n        result = message;\n      }\n      if (message.type === \"status\") {\n        if (message.stage === \"error\")\n          reject(message);\n        if (message.stage === \"complete\") {\n          status_complete = true;\n          if (data_returned) {\n            resolve(result);\n          }\n        }\n      }\n    }\n  });\n}\nasync function check_space_status(id, type, status_callback) {\n  let endpoint = type === \"subdomain\" ? `https://huggingface.co/api/spaces/by-subdomain/${id}` : `https://huggingface.co/api/spaces/${id}`;\n  let response;\n  let _status;\n  try {\n    response = await fetch(endpoint);\n    _status = response.status;\n    if (_status !== 200) {\n      throw new Error();\n    }\n    response = await response.json();\n  } catch (e) {\n    status_callback({\n      status: \"error\",\n      load_status: \"error\",\n      message: SPACE_STATUS_ERROR_MSG,\n      detail: \"NOT_FOUND\"\n    });\n    return;\n  }\n  if (!response || _status !== 200)\n    return;\n  const {\n    runtime: { stage },\n    id: space_name\n  } = response;\n  switch (stage) {\n    case \"STOPPED\":\n    case \"SLEEPING\":\n      status_callback({\n        status: \"sleeping\",\n        load_status: \"pending\",\n        message: \"Space is asleep. Waking it up...\",\n        detail: stage\n      });\n      setTimeout(() => {\n        check_space_status(id, type, status_callback);\n      }, 1e3);\n      break;\n    case \"PAUSED\":\n      status_callback({\n        status: \"paused\",\n        load_status: \"error\",\n        message: \"This space has been paused by the author. If you would like to try this demo, consider duplicating the space.\",\n        detail: stage,\n        discussions_enabled: await discussions_enabled(space_name)\n      });\n      break;\n    case \"RUNNING\":\n    case \"RUNNING_BUILDING\":\n      status_callback({\n        status: \"running\",\n        load_status: \"complete\",\n        message: \"\",\n        detail: stage\n      });\n      break;\n    case \"BUILDING\":\n      status_callback({\n        status: \"building\",\n        load_status: \"pending\",\n        message: \"Space is building...\",\n        detail: stage\n      });\n      setTimeout(() => {\n        check_space_status(id, type, status_callback);\n      }, 1e3);\n      break;\n    default:\n      status_callback({\n        status: \"space_error\",\n        load_status: \"error\",\n        message: \"This space is experiencing an issue.\",\n        detail: stage,\n        discussions_enabled: await discussions_enabled(space_name)\n      });\n      break;\n  }\n}\nconst RE_DISABLED_DISCUSSION = /^(?=[^]*\\b[dD]iscussions{0,1}\\b)(?=[^]*\\b[dD]isabled\\b)[^]*$/;\nasync function discussions_enabled(space_id) {\n  try {\n    const r = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/discussions`,\n      {\n        method: \"HEAD\"\n      }\n    );\n    const error = r.headers.get(\"x-error-message\");\n    if (!r.ok || error && RE_DISABLED_DISCUSSION.test(error))\n      return false;\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nasync function get_space_hardware(space_id, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  try {\n    const res = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/${RUNTIME_URL}`,\n      { headers }\n    );\n    if (res.status !== 200)\n      throw new Error(\"Space hardware could not be obtained.\");\n    const { hardware } = await res.json();\n    return hardware.current;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n}\nasync function set_space_timeout(space_id, timeout, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  const body = {\n    seconds: timeout\n  };\n  try {\n    const res = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/${SLEEPTIME_URL}`,\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\", ...headers },\n        body: JSON.stringify(body)\n      }\n    );\n    if (res.status !== 200) {\n      throw new Error(\n        \"Could not set sleep timeout on duplicated Space. Please visit *ADD HF LINK TO SETTINGS* to set a timeout manually to reduce billing charges.\"\n      );\n    }\n    const response = await res.json();\n    return response;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n}\nconst hardware_types = [\n  \"cpu-basic\",\n  \"cpu-upgrade\",\n  \"cpu-xl\",\n  \"t4-small\",\n  \"t4-medium\",\n  \"a10g-small\",\n  \"a10g-large\",\n  \"a10g-largex2\",\n  \"a10g-largex4\",\n  \"a100-large\",\n  \"zero-a10g\",\n  \"h100\",\n  \"h100x8\"\n];\nasync function duplicate(app_reference, options) {\n  const { hf_token, private: _private, hardware, timeout, auth } = options;\n  if (hardware && !hardware_types.includes(hardware)) {\n    throw new Error(\n      `Invalid hardware type provided. Valid types are: ${hardware_types.map((v) => `\"${v}\"`).join(\",\")}.`\n    );\n  }\n  const { http_protocol, host } = await process_endpoint(\n    app_reference,\n    hf_token\n  );\n  let cookies = null;\n  if (auth) {\n    const cookie_header = await get_cookie_header(\n      http_protocol,\n      host,\n      auth,\n      fetch\n    );\n    if (cookie_header)\n      cookies = parse_and_set_cookies(cookie_header);\n  }\n  const headers = {\n    Authorization: `Bearer ${hf_token}`,\n    \"Content-Type\": \"application/json\",\n    ...cookies ? { Cookie: cookies.join(\"; \") } : {}\n  };\n  const user = (await (await fetch(`https://huggingface.co/api/whoami-v2`, {\n    headers\n  })).json()).name;\n  const space_name = app_reference.split(\"/\")[1];\n  const body = {\n    repository: `${user}/${space_name}`\n  };\n  if (_private) {\n    body.private = true;\n  }\n  let original_hardware;\n  try {\n    if (!hardware) {\n      original_hardware = await get_space_hardware(app_reference, hf_token);\n    }\n  } catch (e) {\n    throw Error(SPACE_METADATA_ERROR_MSG + e.message);\n  }\n  const requested_hardware = hardware || original_hardware || \"cpu-basic\";\n  body.hardware = requested_hardware;\n  try {\n    const response = await fetch(\n      `https://huggingface.co/api/spaces/${app_reference}/duplicate`,\n      {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(body)\n      }\n    );\n    if (response.status === 409) {\n      try {\n        const client2 = await Client.connect(`${user}/${space_name}`, options);\n        return client2;\n      } catch (error) {\n        console.error(\"Failed to connect Client instance:\", error);\n        throw error;\n      }\n    } else if (response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const duplicated_space = await response.json();\n    await set_space_timeout(`${user}/${space_name}`, timeout || 300, hf_token);\n    return await Client.connect(\n      get_space_reference(duplicated_space.url),\n      options\n    );\n  } catch (e) {\n    throw new Error(e);\n  }\n}\nfunction get_space_reference(url) {\n  const regex = /https:\\/\\/huggingface.co\\/spaces\\/([^/]+\\/[^/]+)/;\n  const match = url.match(regex);\n  if (match) {\n    return match[1];\n  }\n}\nclass TextLineStream extends TransformStream {\n  /** Constructs a new instance. */\n  constructor(options = { allowCR: false }) {\n    super({\n      transform: (chars, controller) => {\n        chars = __privateGet(this, _currentLine) + chars;\n        while (true) {\n          const lfIndex = chars.indexOf(\"\\n\");\n          const crIndex = options.allowCR ? chars.indexOf(\"\\r\") : -1;\n          if (crIndex !== -1 && crIndex !== chars.length - 1 && (lfIndex === -1 || lfIndex - 1 > crIndex)) {\n            controller.enqueue(chars.slice(0, crIndex));\n            chars = chars.slice(crIndex + 1);\n            continue;\n          }\n          if (lfIndex === -1)\n            break;\n          const endIndex = chars[lfIndex - 1] === \"\\r\" ? lfIndex - 1 : lfIndex;\n          controller.enqueue(chars.slice(0, endIndex));\n          chars = chars.slice(lfIndex + 1);\n        }\n        __privateSet(this, _currentLine, chars);\n      },\n      flush: (controller) => {\n        if (__privateGet(this, _currentLine) === \"\")\n          return;\n        const currentLine = options.allowCR && __privateGet(this, _currentLine).endsWith(\"\\r\") ? __privateGet(this, _currentLine).slice(0, -1) : __privateGet(this, _currentLine);\n        controller.enqueue(currentLine);\n      }\n    });\n    __privateAdd(this, _currentLine, \"\");\n  }\n}\n_currentLine = new WeakMap();\nfunction stream$1(input) {\n  let decoder = new TextDecoderStream();\n  let split2 = new TextLineStream({ allowCR: true });\n  return input.pipeThrough(decoder).pipeThrough(split2);\n}\nfunction split(input) {\n  let rgx = /[:]\\s*/;\n  let match = rgx.exec(input);\n  let idx = match && match.index;\n  if (idx) {\n    return [\n      input.substring(0, idx),\n      input.substring(idx + match[0].length)\n    ];\n  }\n}\nfunction fallback(headers, key, value) {\n  let tmp = headers.get(key);\n  if (!tmp)\n    headers.set(key, value);\n}\nasync function* events(res, signal) {\n  if (!res.body)\n    return;\n  let iter = stream$1(res.body);\n  let line, reader = iter.getReader();\n  let event;\n  for (; ; ) {\n    if (signal && signal.aborted) {\n      return reader.cancel();\n    }\n    line = await reader.read();\n    if (line.done)\n      return;\n    if (!line.value) {\n      if (event)\n        yield event;\n      event = void 0;\n      continue;\n    }\n    let [field, value] = split(line.value) || [];\n    if (!field)\n      continue;\n    if (field === \"data\") {\n      event || (event = {});\n      event[field] = event[field] ? event[field] + \"\\n\" + value : value;\n    } else if (field === \"event\") {\n      event || (event = {});\n      event[field] = value;\n    } else if (field === \"id\") {\n      event || (event = {});\n      event[field] = +value || value;\n    } else if (field === \"retry\") {\n      event || (event = {});\n      event[field] = +value || void 0;\n    }\n  }\n}\nasync function stream(input, init) {\n  let req = new Request(input, init);\n  fallback(req.headers, \"Accept\", \"text/event-stream\");\n  fallback(req.headers, \"Content-Type\", \"application/json\");\n  let r = await fetch(req);\n  if (!r.ok)\n    throw r;\n  return events(r, req.signal);\n}\nasync function open_stream() {\n  let {\n    event_callbacks,\n    unclosed_events,\n    pending_stream_messages,\n    stream_status,\n    config,\n    jwt\n  } = this;\n  const that = this;\n  if (!config) {\n    throw new Error(\"Could not resolve app config\");\n  }\n  stream_status.open = true;\n  let stream2 = null;\n  let params = new URLSearchParams({\n    session_hash: this.session_hash\n  }).toString();\n  let url = new URL(`${config.root}/queue/data?${params}`);\n  if (jwt) {\n    url.searchParams.set(\"__sign\", jwt);\n  }\n  stream2 = this.stream(url);\n  if (!stream2) {\n    console.warn(\"Cannot connect to SSE endpoint: \" + url.toString());\n    return;\n  }\n  stream2.onmessage = async function(event) {\n    let _data = JSON.parse(event.data);\n    if (_data.msg === \"close_stream\") {\n      close_stream(stream_status, that.abort_controller);\n      return;\n    }\n    const event_id = _data.event_id;\n    if (!event_id) {\n      await Promise.all(\n        Object.keys(event_callbacks).map(\n          (event_id2) => event_callbacks[event_id2](_data)\n        )\n      );\n    } else if (event_callbacks[event_id] && config) {\n      if (_data.msg === \"process_completed\" && [\"sse\", \"sse_v1\", \"sse_v2\", \"sse_v2.1\", \"sse_v3\"].includes(\n        config.protocol\n      )) {\n        unclosed_events.delete(event_id);\n      }\n      let fn2 = event_callbacks[event_id];\n      if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n        setTimeout(fn2, 0, _data);\n      } else {\n        fn2(_data);\n      }\n    } else {\n      if (!pending_stream_messages[event_id]) {\n        pending_stream_messages[event_id] = [];\n      }\n      pending_stream_messages[event_id].push(_data);\n    }\n  };\n  stream2.onerror = async function() {\n    await Promise.all(\n      Object.keys(event_callbacks).map(\n        (event_id) => event_callbacks[event_id]({\n          msg: \"unexpected_error\",\n          message: BROKEN_CONNECTION_MSG\n        })\n      )\n    );\n  };\n}\nfunction close_stream(stream_status, abort_controller) {\n  if (stream_status) {\n    stream_status.open = false;\n    abort_controller == null ? void 0 : abort_controller.abort();\n  }\n}\nfunction apply_diff_stream(pending_diff_streams, event_id, data) {\n  let is_first_generation = !pending_diff_streams[event_id];\n  if (is_first_generation) {\n    pending_diff_streams[event_id] = [];\n    data.data.forEach((value, i) => {\n      pending_diff_streams[event_id][i] = value;\n    });\n  } else {\n    data.data.forEach((value, i) => {\n      let new_data = apply_diff(pending_diff_streams[event_id][i], value);\n      pending_diff_streams[event_id][i] = new_data;\n      data.data[i] = new_data;\n    });\n  }\n}\nfunction apply_diff(obj, diff) {\n  diff.forEach(([action, path, value]) => {\n    obj = apply_edit(obj, path, action, value);\n  });\n  return obj;\n}\nfunction apply_edit(target, path, action, value) {\n  if (path.length === 0) {\n    if (action === \"replace\") {\n      return value;\n    } else if (action === \"append\") {\n      return target + value;\n    }\n    throw new Error(`Unsupported action: ${action}`);\n  }\n  let current = target;\n  for (let i = 0; i < path.length - 1; i++) {\n    current = current[path[i]];\n  }\n  const last_path = path[path.length - 1];\n  switch (action) {\n    case \"replace\":\n      current[last_path] = value;\n      break;\n    case \"append\":\n      current[last_path] += value;\n      break;\n    case \"add\":\n      if (Array.isArray(current)) {\n        current.splice(Number(last_path), 0, value);\n      } else {\n        current[last_path] = value;\n      }\n      break;\n    case \"delete\":\n      if (Array.isArray(current)) {\n        current.splice(Number(last_path), 1);\n      } else {\n        delete current[last_path];\n      }\n      break;\n    default:\n      throw new Error(`Unknown action: ${action}`);\n  }\n  return target;\n}\nfunction readable_stream(input, init = {}) {\n  const instance = {\n    close: () => {\n      throw new Error(\"Method not implemented.\");\n    },\n    onerror: null,\n    onmessage: null,\n    onopen: null,\n    readyState: 0,\n    url: input.toString(),\n    withCredentials: false,\n    CONNECTING: 0,\n    OPEN: 1,\n    CLOSED: 2,\n    addEventListener: () => {\n      throw new Error(\"Method not implemented.\");\n    },\n    dispatchEvent: () => {\n      throw new Error(\"Method not implemented.\");\n    },\n    removeEventListener: () => {\n      throw new Error(\"Method not implemented.\");\n    }\n  };\n  stream(input, init).then(async (res) => {\n    instance.readyState = instance.OPEN;\n    try {\n      for await (const chunk of res) {\n        instance.onmessage && instance.onmessage(chunk);\n      }\n      instance.readyState = instance.CLOSED;\n    } catch (e) {\n      instance.onerror && instance.onerror(e);\n      instance.readyState = instance.CLOSED;\n    }\n  }).catch((e) => {\n    console.error(e);\n    instance.onerror && instance.onerror(e);\n    instance.readyState = instance.CLOSED;\n  });\n  return instance;\n}\nfunction submit(endpoint, data, event_data, trigger_id, all_events) {\n  var _a;\n  try {\n    let fire_event = function(event) {\n      if (all_events || events_to_publish[event.type]) {\n        push_event(event);\n      }\n    }, close = function() {\n      done = true;\n      while (resolvers.length > 0)\n        resolvers.shift()({\n          value: void 0,\n          done: true\n        });\n    }, push = function(data2) {\n      if (done)\n        return;\n      if (resolvers.length > 0) {\n        resolvers.shift()(data2);\n      } else {\n        values.push(data2);\n      }\n    }, push_error = function(error) {\n      push(thenable_reject(error));\n      close();\n    }, push_event = function(event) {\n      push({ value: event, done: false });\n    }, next = function() {\n      if (values.length > 0)\n        return Promise.resolve(values.shift());\n      if (done)\n        return Promise.resolve({ value: void 0, done: true });\n      return new Promise((resolve) => resolvers.push(resolve));\n    };\n    const { hf_token } = this.options;\n    const {\n      fetch: fetch2,\n      app_reference,\n      config,\n      session_hash,\n      api_info,\n      api_map,\n      stream_status,\n      pending_stream_messages,\n      pending_diff_streams,\n      event_callbacks,\n      unclosed_events,\n      post_data: post_data2,\n      options\n    } = this;\n    const that = this;\n    if (!api_info)\n      throw new Error(\"No API found\");\n    if (!config)\n      throw new Error(\"Could not resolve app config\");\n    let { fn_index, endpoint_info, dependency } = get_endpoint_info(\n      api_info,\n      endpoint,\n      api_map,\n      config\n    );\n    let resolved_data = map_data_to_params(data, api_info);\n    let websocket;\n    let stream2;\n    let protocol = config.protocol ?? \"ws\";\n    const _endpoint = typeof endpoint === \"number\" ? \"/predict\" : endpoint;\n    let payload;\n    let event_id = null;\n    let complete = false;\n    let last_status = {};\n    let url_params = typeof window !== \"undefined\" && typeof document !== \"undefined\" ? new URLSearchParams(window.location.search).toString() : \"\";\n    const events_to_publish = ((_a = options == null ? void 0 : options.events) == null ? void 0 : _a.reduce(\n      (acc, event) => {\n        acc[event] = true;\n        return acc;\n      },\n      {}\n    )) || {};\n    async function cancel() {\n      const _status = {\n        stage: \"complete\",\n        queue: false,\n        time: /* @__PURE__ */ new Date()\n      };\n      complete = _status;\n      fire_event({\n        ..._status,\n        type: \"status\",\n        endpoint: _endpoint,\n        fn_index\n      });\n      let reset_request = {};\n      let cancel_request = {};\n      if (protocol === \"ws\") {\n        if (websocket && websocket.readyState === 0) {\n          websocket.addEventListener(\"open\", () => {\n            websocket.close();\n          });\n        } else {\n          websocket.close();\n        }\n        reset_request = { fn_index, session_hash };\n      } else {\n        close_stream(stream_status, that.abort_controller);\n        close();\n        reset_request = { event_id };\n        cancel_request = { event_id, session_hash, fn_index };\n      }\n      try {\n        if (!config) {\n          throw new Error(\"Could not resolve app config\");\n        }\n        if (\"event_id\" in cancel_request) {\n          await fetch2(`${config.root}/cancel`, {\n            headers: { \"Content-Type\": \"application/json\" },\n            method: \"POST\",\n            body: JSON.stringify(cancel_request)\n          });\n        }\n        await fetch2(`${config.root}/reset`, {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify(reset_request)\n        });\n      } catch (e) {\n        console.warn(\n          \"The `/reset` endpoint could not be called. Subsequent endpoint results may be unreliable.\"\n        );\n      }\n    }\n    const resolve_heartbeat = async (config2) => {\n      await this._resolve_hearbeat(config2);\n    };\n    async function handle_render_config(render_config) {\n      if (!config)\n        return;\n      let render_id = render_config.render_id;\n      config.components = [\n        ...config.components.filter((c) => c.props.rendered_in !== render_id),\n        ...render_config.components\n      ];\n      config.dependencies = [\n        ...config.dependencies.filter((d) => d.rendered_in !== render_id),\n        ...render_config.dependencies\n      ];\n      const any_state = config.components.some((c) => c.type === \"state\");\n      const any_unload = config.dependencies.some(\n        (d) => d.targets.some((t) => t[1] === \"unload\")\n      );\n      config.connect_heartbeat = any_state || any_unload;\n      await resolve_heartbeat(config);\n      fire_event({\n        type: \"render\",\n        data: render_config,\n        endpoint: _endpoint,\n        fn_index\n      });\n    }\n    this.handle_blob(config.root, resolved_data, endpoint_info).then(\n      async (_payload) => {\n        var _a2;\n        let input_data = handle_payload(\n          _payload,\n          dependency,\n          config.components,\n          \"input\",\n          true\n        );\n        payload = {\n          data: input_data || [],\n          event_data,\n          fn_index,\n          trigger_id\n        };\n        if (skip_queue(fn_index, config)) {\n          fire_event({\n            type: \"status\",\n            endpoint: _endpoint,\n            stage: \"pending\",\n            queue: false,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          post_data2(\n            `${config.root}/run${_endpoint.startsWith(\"/\") ? _endpoint : `/${_endpoint}`}${url_params ? \"?\" + url_params : \"\"}`,\n            {\n              ...payload,\n              session_hash\n            }\n          ).then(([output, status_code]) => {\n            const data2 = output.data;\n            if (status_code == 200) {\n              fire_event({\n                type: \"data\",\n                endpoint: _endpoint,\n                fn_index,\n                data: handle_payload(\n                  data2,\n                  dependency,\n                  config.components,\n                  \"output\",\n                  options.with_null_state\n                ),\n                time: /* @__PURE__ */ new Date(),\n                event_data,\n                trigger_id\n              });\n              if (output.render_config) {\n                handle_render_config(output.render_config);\n              }\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                stage: \"complete\",\n                eta: output.average_duration,\n                queue: false,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                endpoint: _endpoint,\n                fn_index,\n                message: output.error,\n                queue: false,\n                time: /* @__PURE__ */ new Date()\n              });\n            }\n          }).catch((e) => {\n            fire_event({\n              type: \"status\",\n              stage: \"error\",\n              message: e.message,\n              endpoint: _endpoint,\n              fn_index,\n              queue: false,\n              time: /* @__PURE__ */ new Date()\n            });\n          });\n        } else if (protocol == \"ws\") {\n          const { ws_protocol, host } = await process_endpoint(\n            app_reference,\n            hf_token\n          );\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          let url = new URL(\n            `${ws_protocol}://${resolve_root(\n              host,\n              config.path,\n              true\n            )}/queue/join${url_params ? \"?\" + url_params : \"\"}`\n          );\n          if (this.jwt) {\n            url.searchParams.set(\"__sign\", this.jwt);\n          }\n          websocket = new WebSocket(url);\n          websocket.onclose = (evt) => {\n            if (!evt.wasClean) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                broken: true,\n                message: BROKEN_CONNECTION_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            }\n          };\n          websocket.onmessage = function(event) {\n            const _data = JSON.parse(event.data);\n            const { type, status, data: data2 } = handle_message(\n              _data,\n              last_status[fn_index]\n            );\n            if (type === \"update\" && status && !complete) {\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date(),\n                ...status\n              });\n              if (status.stage === \"error\") {\n                websocket.close();\n              }\n            } else if (type === \"hash\") {\n              websocket.send(JSON.stringify({ fn_index, session_hash }));\n              return;\n            } else if (type === \"data\") {\n              websocket.send(JSON.stringify({ ...payload, session_hash }));\n            } else if (type === \"complete\") {\n              complete = status;\n            } else if (type === \"log\") {\n              fire_event({\n                type: \"log\",\n                log: data2.log,\n                level: data2.level,\n                endpoint: _endpoint,\n                fn_index\n              });\n            } else if (type === \"generating\") {\n              fire_event({\n                type: \"status\",\n                time: /* @__PURE__ */ new Date(),\n                ...status,\n                stage: status == null ? void 0 : status.stage,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index\n              });\n            }\n            if (data2) {\n              fire_event({\n                type: \"data\",\n                time: /* @__PURE__ */ new Date(),\n                data: handle_payload(\n                  data2.data,\n                  dependency,\n                  config.components,\n                  \"output\",\n                  options.with_null_state\n                ),\n                endpoint: _endpoint,\n                fn_index,\n                event_data,\n                trigger_id\n              });\n              if (complete) {\n                fire_event({\n                  type: \"status\",\n                  time: /* @__PURE__ */ new Date(),\n                  ...complete,\n                  stage: status == null ? void 0 : status.stage,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index\n                });\n                websocket.close();\n              }\n            }\n          };\n          if (semiver(config.version || \"2.0.0\", \"3.6\") < 0) {\n            addEventListener(\n              \"open\",\n              () => websocket.send(JSON.stringify({ hash: session_hash }))\n            );\n          }\n        } else if (protocol == \"sse\") {\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          var params = new URLSearchParams({\n            fn_index: fn_index.toString(),\n            session_hash\n          }).toString();\n          let url = new URL(\n            `${config.root}/queue/join?${url_params ? url_params + \"&\" : \"\"}${params}`\n          );\n          if (this.jwt) {\n            url.searchParams.set(\"__sign\", this.jwt);\n          }\n          stream2 = this.stream(url);\n          if (!stream2) {\n            return Promise.reject(\n              new Error(\"Cannot connect to SSE endpoint: \" + url.toString())\n            );\n          }\n          stream2.onmessage = async function(event) {\n            const _data = JSON.parse(event.data);\n            const { type, status, data: data2 } = handle_message(\n              _data,\n              last_status[fn_index]\n            );\n            if (type === \"update\" && status && !complete) {\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date(),\n                ...status\n              });\n              if (status.stage === \"error\") {\n                stream2 == null ? void 0 : stream2.close();\n                close();\n              }\n            } else if (type === \"data\") {\n              event_id = _data.event_id;\n              let [_, status2] = await post_data2(`${config.root}/queue/data`, {\n                ...payload,\n                session_hash,\n                event_id\n              });\n              if (status2 !== 200) {\n                fire_event({\n                  type: \"status\",\n                  stage: \"error\",\n                  message: BROKEN_CONNECTION_MSG,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index,\n                  time: /* @__PURE__ */ new Date()\n                });\n                stream2 == null ? void 0 : stream2.close();\n                close();\n              }\n            } else if (type === \"complete\") {\n              complete = status;\n            } else if (type === \"log\") {\n              fire_event({\n                type: \"log\",\n                log: data2.log,\n                level: data2.level,\n                endpoint: _endpoint,\n                fn_index\n              });\n            } else if (type === \"generating\") {\n              fire_event({\n                type: \"status\",\n                time: /* @__PURE__ */ new Date(),\n                ...status,\n                stage: status == null ? void 0 : status.stage,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index\n              });\n            }\n            if (data2) {\n              fire_event({\n                type: \"data\",\n                time: /* @__PURE__ */ new Date(),\n                data: handle_payload(\n                  data2.data,\n                  dependency,\n                  config.components,\n                  \"output\",\n                  options.with_null_state\n                ),\n                endpoint: _endpoint,\n                fn_index,\n                event_data,\n                trigger_id\n              });\n              if (complete) {\n                fire_event({\n                  type: \"status\",\n                  time: /* @__PURE__ */ new Date(),\n                  ...complete,\n                  stage: status == null ? void 0 : status.stage,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index\n                });\n                stream2 == null ? void 0 : stream2.close();\n                close();\n              }\n            }\n          };\n        } else if (protocol == \"sse_v1\" || protocol == \"sse_v2\" || protocol == \"sse_v2.1\" || protocol == \"sse_v3\") {\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          let hostname = \"\";\n          if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n            hostname = (_a2 = window == null ? void 0 : window.location) == null ? void 0 : _a2.hostname;\n          }\n          let hfhubdev = \"dev.spaces.huggingface.tech\";\n          const origin = hostname.includes(\".dev.\") ? `https://moon-${hostname.split(\".\")[1]}.${hfhubdev}` : `https://huggingface.co`;\n          const is_iframe = typeof window !== \"undefined\" && typeof document !== \"undefined\" && window.parent != window;\n          const is_zerogpu_space = dependency.zerogpu && config.space_id;\n          const zerogpu_auth_promise = is_iframe && is_zerogpu_space ? post_message(\"zerogpu-headers\", origin) : Promise.resolve(null);\n          const post_data_promise = zerogpu_auth_promise.then((headers) => {\n            return post_data2(\n              `${config.root}/queue/join?${url_params}`,\n              {\n                ...payload,\n                session_hash\n              },\n              headers\n            );\n          });\n          post_data_promise.then(async ([response, status]) => {\n            if (status === 503) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                message: QUEUE_FULL_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else if (status !== 200) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                message: BROKEN_CONNECTION_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else {\n              event_id = response.event_id;\n              let callback = async function(_data) {\n                try {\n                  const { type, status: status2, data: data2 } = handle_message(\n                    _data,\n                    last_status[fn_index]\n                  );\n                  if (type == \"heartbeat\") {\n                    return;\n                  }\n                  if (type === \"update\" && status2 && !complete) {\n                    fire_event({\n                      type: \"status\",\n                      endpoint: _endpoint,\n                      fn_index,\n                      time: /* @__PURE__ */ new Date(),\n                      ...status2\n                    });\n                  } else if (type === \"complete\") {\n                    complete = status2;\n                  } else if (type == \"unexpected_error\") {\n                    console.error(\"Unexpected error\", status2 == null ? void 0 : status2.message);\n                    fire_event({\n                      type: \"status\",\n                      stage: \"error\",\n                      message: (status2 == null ? void 0 : status2.message) || \"An Unexpected Error Occurred!\",\n                      queue: true,\n                      endpoint: _endpoint,\n                      fn_index,\n                      time: /* @__PURE__ */ new Date()\n                    });\n                  } else if (type === \"log\") {\n                    fire_event({\n                      type: \"log\",\n                      log: data2.log,\n                      level: data2.level,\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    return;\n                  } else if (type === \"generating\") {\n                    fire_event({\n                      type: \"status\",\n                      time: /* @__PURE__ */ new Date(),\n                      ...status2,\n                      stage: status2 == null ? void 0 : status2.stage,\n                      queue: true,\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    if (data2 && [\"sse_v2\", \"sse_v2.1\", \"sse_v3\"].includes(protocol)) {\n                      apply_diff_stream(pending_diff_streams, event_id, data2);\n                    }\n                  }\n                  if (data2) {\n                    fire_event({\n                      type: \"data\",\n                      time: /* @__PURE__ */ new Date(),\n                      data: handle_payload(\n                        data2.data,\n                        dependency,\n                        config.components,\n                        \"output\",\n                        options.with_null_state\n                      ),\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    if (data2.render_config) {\n                      await handle_render_config(data2.render_config);\n                    }\n                    if (complete) {\n                      fire_event({\n                        type: \"status\",\n                        time: /* @__PURE__ */ new Date(),\n                        ...complete,\n                        stage: status2 == null ? void 0 : status2.stage,\n                        queue: true,\n                        endpoint: _endpoint,\n                        fn_index\n                      });\n                    }\n                  }\n                  if ((status2 == null ? void 0 : status2.stage) === \"complete\" || (status2 == null ? void 0 : status2.stage) === \"error\") {\n                    if (event_callbacks[event_id]) {\n                      delete event_callbacks[event_id];\n                    }\n                    if (event_id in pending_diff_streams) {\n                      delete pending_diff_streams[event_id];\n                    }\n                  }\n                } catch (e) {\n                  console.error(\"Unexpected client exception\", e);\n                  fire_event({\n                    type: \"status\",\n                    stage: \"error\",\n                    message: \"An Unexpected Error Occurred!\",\n                    queue: true,\n                    endpoint: _endpoint,\n                    fn_index,\n                    time: /* @__PURE__ */ new Date()\n                  });\n                  if ([\"sse_v2\", \"sse_v2.1\", \"sse_v3\"].includes(protocol)) {\n                    close_stream(stream_status, that.abort_controller);\n                    stream_status.open = false;\n                    close();\n                  }\n                }\n              };\n              if (event_id in pending_stream_messages) {\n                pending_stream_messages[event_id].forEach(\n                  (msg) => callback(msg)\n                );\n                delete pending_stream_messages[event_id];\n              }\n              event_callbacks[event_id] = callback;\n              unclosed_events.add(event_id);\n              if (!stream_status.open) {\n                await this.open_stream();\n              }\n            }\n          });\n        }\n      }\n    );\n    let done = false;\n    const values = [];\n    const resolvers = [];\n    const iterator = {\n      [Symbol.asyncIterator]: () => iterator,\n      next,\n      throw: async (value) => {\n        push_error(value);\n        return next();\n      },\n      return: async () => {\n        close();\n        return next();\n      },\n      cancel\n    };\n    return iterator;\n  } catch (error) {\n    console.error(\"Submit function encountered an error:\", error);\n    throw error;\n  }\n}\nfunction thenable_reject(error) {\n  return {\n    then: (resolve, reject) => reject(error)\n  };\n}\nfunction get_endpoint_info(api_info, endpoint, api_map, config) {\n  let fn_index;\n  let endpoint_info;\n  let dependency;\n  if (typeof endpoint === \"number\") {\n    fn_index = endpoint;\n    endpoint_info = api_info.unnamed_endpoints[fn_index];\n    dependency = config.dependencies.find((dep) => dep.id == endpoint);\n  } else {\n    const trimmed_endpoint = endpoint.replace(/^\\//, \"\");\n    fn_index = api_map[trimmed_endpoint];\n    endpoint_info = api_info.named_endpoints[endpoint.trim()];\n    dependency = config.dependencies.find(\n      (dep) => dep.id == api_map[trimmed_endpoint]\n    );\n  }\n  if (typeof fn_index !== \"number\") {\n    throw new Error(\n      \"There is no endpoint matching that name of fn_index matching that number.\"\n    );\n  }\n  return { fn_index, endpoint_info, dependency };\n}\nclass Client {\n  constructor(app_reference, options = { events: [\"data\"] }) {\n    __publicField(this, \"app_reference\");\n    __publicField(this, \"options\");\n    __publicField(this, \"config\");\n    __publicField(this, \"api_info\");\n    __publicField(this, \"api_map\", {});\n    __publicField(this, \"session_hash\", Math.random().toString(36).substring(2));\n    __publicField(this, \"jwt\", false);\n    __publicField(this, \"last_status\", {});\n    __publicField(this, \"cookies\", null);\n    // streaming\n    __publicField(this, \"stream_status\", { open: false });\n    __publicField(this, \"pending_stream_messages\", {});\n    __publicField(this, \"pending_diff_streams\", {});\n    __publicField(this, \"event_callbacks\", {});\n    __publicField(this, \"unclosed_events\", /* @__PURE__ */ new Set());\n    __publicField(this, \"heartbeat_event\", null);\n    __publicField(this, \"abort_controller\", null);\n    __publicField(this, \"stream_instance\", null);\n    __publicField(this, \"view_api\");\n    __publicField(this, \"upload_files\");\n    __publicField(this, \"upload\");\n    __publicField(this, \"handle_blob\");\n    __publicField(this, \"post_data\");\n    __publicField(this, \"submit\");\n    __publicField(this, \"predict\");\n    __publicField(this, \"open_stream\");\n    __publicField(this, \"resolve_config\");\n    __publicField(this, \"resolve_cookies\");\n    this.app_reference = app_reference;\n    if (!options.events) {\n      options.events = [\"data\"];\n    }\n    this.options = options;\n    this.view_api = view_api.bind(this);\n    this.upload_files = upload_files.bind(this);\n    this.handle_blob = handle_blob.bind(this);\n    this.post_data = post_data.bind(this);\n    this.submit = submit.bind(this);\n    this.predict = predict.bind(this);\n    this.open_stream = open_stream.bind(this);\n    this.resolve_config = resolve_config.bind(this);\n    this.resolve_cookies = resolve_cookies.bind(this);\n    this.upload = upload.bind(this);\n  }\n  fetch(input, init) {\n    const headers = new Headers((init == null ? void 0 : init.headers) || {});\n    if (this && this.cookies) {\n      headers.append(\"Cookie\", this.cookies);\n    }\n    return fetch(input, { ...init, headers });\n  }\n  stream(url) {\n    this.abort_controller = new AbortController();\n    this.stream_instance = readable_stream(url.toString(), {\n      signal: this.abort_controller.signal\n    });\n    return this.stream_instance;\n  }\n  async init() {\n    var _a;\n    if ((typeof window === \"undefined\" || !(\"WebSocket\" in window)) && !global.WebSocket) {\n      const ws = await import(\"./wrapper-CviSselG.js\");\n      global.WebSocket = ws.WebSocket;\n    }\n    try {\n      if (this.options.auth) {\n        await this.resolve_cookies();\n      }\n      await this._resolve_config().then(\n        ({ config }) => this._resolve_hearbeat(config)\n      );\n    } catch (e) {\n      throw Error(e);\n    }\n    this.api_info = await this.view_api();\n    this.api_map = map_names_to_ids(((_a = this.config) == null ? void 0 : _a.dependencies) || []);\n  }\n  async _resolve_hearbeat(_config) {\n    if (_config) {\n      this.config = _config;\n      if (this.config && this.config.connect_heartbeat) {\n        if (this.config.space_id && this.options.hf_token) {\n          this.jwt = await get_jwt(\n            this.config.space_id,\n            this.options.hf_token,\n            this.cookies\n          );\n        }\n      }\n    }\n    if (_config.space_id && this.options.hf_token) {\n      this.jwt = await get_jwt(_config.space_id, this.options.hf_token);\n    }\n    if (this.config && this.config.connect_heartbeat) {\n      const heartbeat_url = new URL(\n        `${this.config.root}/heartbeat/${this.session_hash}`\n      );\n      if (this.jwt) {\n        heartbeat_url.searchParams.set(\"__sign\", this.jwt);\n      }\n      if (!this.heartbeat_event) {\n        this.heartbeat_event = this.stream(heartbeat_url);\n      }\n    }\n  }\n  static async connect(app_reference, options = {\n    events: [\"data\"]\n  }) {\n    const client2 = new this(app_reference, options);\n    await client2.init();\n    return client2;\n  }\n  close() {\n    var _a;\n    (_a = this.heartbeat_event) == null ? void 0 : _a.close();\n  }\n  static async duplicate(app_reference, options = {\n    events: [\"data\"]\n  }) {\n    return duplicate(app_reference, options);\n  }\n  async _resolve_config() {\n    const { http_protocol, host, space_id } = await process_endpoint(\n      this.app_reference,\n      this.options.hf_token\n    );\n    const { status_callback } = this.options;\n    let config;\n    try {\n      config = await this.resolve_config(`${http_protocol}//${host}`);\n      if (!config) {\n        throw new Error(CONFIG_ERROR_MSG);\n      }\n      return this.config_success(config);\n    } catch (e) {\n      if (space_id && status_callback) {\n        check_space_status(\n          space_id,\n          RE_SPACE_NAME.test(space_id) ? \"space_name\" : \"subdomain\",\n          this.handle_space_success\n        );\n      } else {\n        if (status_callback)\n          status_callback({\n            status: \"error\",\n            message: \"Could not load this space.\",\n            load_status: \"error\",\n            detail: \"NOT_FOUND\"\n          });\n        throw Error(e);\n      }\n    }\n  }\n  async config_success(_config) {\n    this.config = _config;\n    if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n      if (window.location.protocol === \"https:\") {\n        this.config.root = this.config.root.replace(\"http://\", \"https://\");\n      }\n    }\n    if (this.config.auth_required) {\n      return this.prepare_return_obj();\n    }\n    try {\n      this.api_info = await this.view_api();\n    } catch (e) {\n      console.error(API_INFO_ERROR_MSG + e.message);\n    }\n    return this.prepare_return_obj();\n  }\n  async handle_space_success(status) {\n    if (!this) {\n      throw new Error(CONFIG_ERROR_MSG);\n    }\n    const { status_callback } = this.options;\n    if (status_callback)\n      status_callback(status);\n    if (status.status === \"running\") {\n      try {\n        this.config = await this._resolve_config();\n        if (!this.config) {\n          throw new Error(CONFIG_ERROR_MSG);\n        }\n        const _config = await this.config_success(this.config);\n        return _config;\n      } catch (e) {\n        if (status_callback) {\n          status_callback({\n            status: \"error\",\n            message: \"Could not load this space.\",\n            load_status: \"error\",\n            detail: \"NOT_FOUND\"\n          });\n        }\n        throw e;\n      }\n    }\n  }\n  async component_server(component_id, fn_name, data) {\n    var _a;\n    if (!this.config) {\n      throw new Error(CONFIG_ERROR_MSG);\n    }\n    const headers = {};\n    const { hf_token } = this.options;\n    const { session_hash } = this;\n    if (hf_token) {\n      headers.Authorization = `Bearer ${this.options.hf_token}`;\n    }\n    let root_url;\n    let component = this.config.components.find(\n      (comp) => comp.id === component_id\n    );\n    if ((_a = component == null ? void 0 : component.props) == null ? void 0 : _a.root_url) {\n      root_url = component.props.root_url;\n    } else {\n      root_url = this.config.root;\n    }\n    let body;\n    if (\"binary\" in data) {\n      body = new FormData();\n      for (const key in data.data) {\n        if (key === \"binary\")\n          continue;\n        body.append(key, data.data[key]);\n      }\n      body.set(\"component_id\", component_id.toString());\n      body.set(\"fn_name\", fn_name);\n      body.set(\"session_hash\", session_hash);\n    } else {\n      body = JSON.stringify({\n        data,\n        component_id,\n        fn_name,\n        session_hash\n      });\n      headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (hf_token) {\n      headers.Authorization = `Bearer ${hf_token}`;\n    }\n    try {\n      const response = await this.fetch(`${root_url}/component_server/`, {\n        method: \"POST\",\n        body,\n        headers,\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(\n          \"Could not connect to component server: \" + response.statusText\n        );\n      }\n      const output = await response.json();\n      return output;\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  set_cookies(raw_cookies) {\n    this.cookies = parse_and_set_cookies(raw_cookies).join(\"; \");\n  }\n  prepare_return_obj() {\n    return {\n      config: this.config,\n      predict: this.predict,\n      submit: this.submit,\n      view_api: this.view_api,\n      component_server: this.component_server\n    };\n  }\n}\nasync function client(app_reference, options = {\n  events: [\"data\"]\n}) {\n  return await Client.connect(app_reference, options);\n}\nasync function duplicate_space(app_reference, options) {\n  return await Client.duplicate(app_reference, options);\n}\nexport {\n  Client,\n  FileData,\n  client,\n  duplicate_space as duplicate,\n  handle_file,\n  predict,\n  prepare_files,\n  submit,\n  upload,\n  upload_files\n};\n"],
  "mappings": "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",
  "names": []
}
